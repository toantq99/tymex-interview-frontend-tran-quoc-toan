{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:react/recommended",
    "prettier"
  ],
  "plugins": [
    "simple-import-sort",
    "react-hooks",
    "@typescript-eslint",
    "prettier"
  ],
  "env": {
    "browser": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "legacyDecorators": true,
      "jsx": true,
      "parser": "@typescript-eslint/parser",
      "project": "./tsconfig.json"
    },
    "project": "./tsconfig.json"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    // "@typescript-eslint/lines-between-class-members": "error",
    //   // Prettier
    //   "prettier/prettier": ["error", { "endOfLine": "auto" }],
    //   // Common rules
    //   "linebreak-style": 0,
    //   "camelcase": "off",
    //   "implicit-arrow-linebreak": "off",
    //   "default-case": "off",
    //   "consistent-return": "off",
    //   "import/prefer-default-export": "off",
    //   "operator-linebreak": "off",
    //   "semi": ["error", "never"],
    //   "no-underscore-dangle": "off",
    "arrow-body-style": "warn",
    "no-unused-vars": "warn",
    "no-useless-rename": "error",
    "object-shorthand": ["error", "always"],
    //   "object-curly-newline": [1, { "consistent": true }],
    //   "jsx-a11y/anchor-is-valid": [
    //     "error",
    //     {
    //       "components": ["Link"],
    //       "specialLink": ["to"]
    //     }
    //   ],
    //   "padding-line-between-statements": [
    //     "error",
    //     {
    //       "blankLine": "always",
    //       "prev": "*",
    //       "next": ["return", "export", "block-like"]
    //     },
    //     {
    //       "blankLine": "always",
    //       "prev": "block-like",
    //       "next": "*"
    //     }
    //   ],
    //   "no-bitwise": "off",

    //   // Typescript rules
    //   "@typescript-eslint/lines-between-class-members": "off",
    //   "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-vars": "warn",

    //   // Class rules
    //   "class-methods-use-this": "off",
    //   "max-classes-per-file": "off",

    //   // Import rules
    //   "import/no-extraneous-dependencies": [
    //     "error",
    //     {
    //       "devDependencies": false,
    //       "optionalDependencies": false,
    //       "peerDependencies": false
    //     }
    //   ],
    //   "import/extensions": "off",
    //   "import/no-unresolved": [2, { "ignore": ["^@/", "^engyn"] }],

    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first.
          ["^react", "^@?\\w"],
          ["/components", "/pages", "^\\.\\.(?!/?$)", "^\\.\\./?$"],
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          ["/hooks", "/hocs"],
          ["/constants"],
          ["/helpers"],
          ["/enums", "/types"],
          ["/styles", "^.+\\.(css|scss)$"]
        ]
      }
    ],

    //   // React rules
    //   "react/prop-types": "off",
    //   "react/require-default-props": "off",
    //   "react/jsx-props-no-spreading": "off",
    //   "react/static-property-placement": ["off", "static public field"],
    //   "react/state-in-constructor": "off",
    //   "react/destructuring-assignment": "off",
    //   "react/no-did-update-set-state": "off",
    //   "react/jsx-curly-newline": "off",
    //   "react/jsx-one-expression-per-line": "off",
    //   "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    //   "react/jsx-filename-extension": [
    //     1,
    //     { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
    //   ],
    //   "react/no-did-mount-set-state": "off",
    //   "react/jsx-key": ["warn", { "warnOnDuplicates": true }]
    "react/self-closing-comp": ["error", { "component": true, "html": true }]
  }
  // "overrides": [
  //   {
  //     "files": ["*.js"],
  //     "rules": {
  //       "simple-import-sort/imports": [
  //         "error",
  //         {
  //           "groups": [
  //             // Node.js builtins. You could also generate this regex if you use a `.js` config.
  //             // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
  //             [
  //               "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
  //             ],
  //             // Packages. `react` related packages come first.
  //             ["^react", "^@?\\w"],
  //             [
  //               "^engynForm/\\w",
  //               "^engynCore/\\w",
  //               "^engynTask/\\w",
  //               "^engynQMS/\\w",
  //               "^engynBase/\\w"
  //             ],
  //             [
  //               "^\\.\\.(?!/?$)",
  //               "^\\.\\./?$",
  //               "^\\./(?=.*/)(?!/?$)",
  //               "^\\.(?!/?$)",
  //               "^\\./?$"
  //             ],

  //             ["@/engyn.base.apps.web.shared/", "@/flynk.app.web.core"],
  //             ["/stores"],
  //             ["/constants"],
  //             ["/helpers"],
  //             ["/types", "/styles", "^.+\\.(css|less)$"]
  //           ]
  //         }
  //       ]
  //     }
  //   }
  // ]
}
